printf("%s\n", version());
cputime = [func(){return 0.0;}];

base := dirname(argv[0]);
chdir(base);

[module
    argv := [array "ackermann.ici", "6"]; 
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "ary3.ici", "100"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "except.ici", "10000"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "fibo.ici", "25"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "hash2.ici", "5"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "lists.ici", "10"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "matrix.ici", "10"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "methcall.ici", "50000"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "heapsort.ici", "10000"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "nestedloop.ici", "8"];
    printf("%s: ", argv[0]);
    ff := fopen(argv[0]);
    parse(ff, scope());
    close(ff);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "objinst.ici", "30000"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());


[module
    argv := [array "prodcons.ici", "20000"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "random.ici", "100000"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());

[module
    argv := [array "sieve.ici", "10"];
    printf("%s: ", argv[0]);
    f := fopen(argv[0]);
    parse(f, scope());
    close(f);
];

printf("cputime = %f\n", cputime());
