#
# For compiling a standard version on Mac OS X
#

PREFIX	= /usr/local
PROG    = ici
LIB     = libici4.dylib
CC      = cc -pipe
LIBS    = -framework Foundation
COPT	?= -Os -DNDEBUG
CFLAGS  = -g -Wall $(COPT) -I. -Imacosx -fno-common -dynamic
LDFLAGS = -g

PCH	= fwd.h
GCH	= $(PCH).gch

MAN1	= doc/man1/ici.1\
	  doc/man1/icifuncs.1\
	  doc/man1/icioo.1\
	  doc/man1/iciops.1\
	  doc/man1/icire.1\
	  doc/man1/icistmt.1\
	  doc/man1/icitypes.1

# Pre-Tiger there was no dlopen/dlsym/etc... in libc and we needed
# to provide our own.  We run a little script that outputs YES if
# this OS version has dlopen in the library, or NO if it doesn't.
# Then we use that to decide if we need to use our own dlopen.
HAS_DLOPEN = $(shell macosx/has-dlopen)

#
# Where things get installed.
#
BINDIR  = $(PREFIX)/bin
MANDIR  = $(PREFIX)/man/man1
INCDIR	= $(PREFIX)/include
LIBDIR	= $(PREFIX)/lib
ICILIBDIR = $(LIBDIR)/ici4
DOCDIR	= $(PREFIX)/share/doc

INSTALL = install -c

#
# Interpreter object files
#
OBJS    = \
	alloc.o aplfuncs.o arith.o array.o call.o \
	catch.o cfunc.o cfunco.o clib.o clib2.o \
	compile.o conf.o control.o crc.o events.o exec.o \
	exerror.o file.o findpath.o \
	float.o forall.o \
	func.o handle.o icimain.o init.o int.o \
	lex.o load.o \
	mark.o mem.o method.o \
	mkvar.o null.o \
	object.o oofuncs.o op.o parse.o pc.o \
	ptr.o refuncs.o regexp.o set.o sfile.o \
	signals.o smash.o src.o string.o sstring.o \
	struct.o syserr.o\
	thread.o trace.o unary.o uninit.o\
	buf.o strtol.o \
	idb.o idb2.o profile.o

OSXOBJS=semaphore.o

ifeq ($(HAS_DLOPEN),NO)
OSXOBJS+=dlfcn_simple.o
endif

PCREOBJS=\
	study.o maketables.o pcre.o

ALL_OBJS = $(OBJS) $(PCREOBJS) $(OSXOBJS)

default: $(PROG) ici.h

$(PROG): main.o $(LIB)
	$(CC) $(LDFLAGS) -o $@ main.o $(LIB) $(LIBS)

all:    $(PROG)

.PRECIOUS: $(LIB)

$(OBJS) : $(GCH)

$(GCH) : $(PCH)
	$(CC) $(CFLAGS) $(PCH)

$(LIB)  : $(ALL_OBJS)
	libtool -dynamic -o $@ $(ALL_OBJS) -lc -lSystem -lSystemStubs

study.o : pcre/study.c
	$(CC) -c -o $@ $(CFLAGS) pcre/study.c

maketables.o    : pcre/maketables.c
	$(CC) -c -o $@ $(CFLAGS) pcre/maketables.c

pcre.o  : pcre/pcre.c
	$(CC) -c -o $@ $(CFLAGS) pcre/pcre.c

ifeq ($(HAS_DLOPEN),NO)
dlfcn_simple.o : macosx/dlfcn_simple.c
	$(CC) -c -o $@ $(CFLAGS) macosx/dlfcn_simple.c
endif

semaphore.o : macosx/semaphore.c
	$(CC) -c -o $@ $(CFLAGS) macosx/semaphore.c

# Headers that are potentially used in module writing are made public
ICIHDRS= ici.h icistr-setup.h

# Useful public documentation
DOCS= doc/ici.pdf

ici.h: $(PROG)
	ICIPATH=. ./$(PROG) mk-ici-h.ici conf-osx.h

# Install the init file, headers and docs.
install: $(PROG) $(LIB) ici.h
	@echo '=========================================='
	@echo 'Creating installation directories'
	@echo '=========================================='
	[ -d $(BINDIR) ] || mkdir -p $(BINDIR)
	-mkdir -p $(MANDIR)
	-mkdir -p $(INCDIR)
	-mkdir -p $(LIBDIR)
	-mkdir -p $(ICILIBDIR)
	-mkdir -p $(DOCDIR)
	@echo '=========================================='
	@echo 'Installing ici interpreter and manual pages'
	@echo '=========================================='
	$(INSTALL) -m 555 $(PROG) $(BINDIR)
	for f in $(MAN1); do\
	    $(INSTALL) -m 444 $$f $(MANDIR);\
	done
	@echo '=========================================='
	@echo 'Installing ici library'
	@echo '=========================================='
	$(INSTALL) -m 444 $(LIB) $(LIBDIR)
	ranlib $(LIBDIR)/$(LIB)
	@echo '=========================================='
	@echo 'Core files'
	@echo '=========================================='
	$(INSTALL) -m 444 ici4core.ici $(ICILIBDIR)
	$(INSTALL) -m 444 ici4core1.ici $(ICILIBDIR)
	$(INSTALL) -m 444 ici4core2.ici $(ICILIBDIR)
	$(INSTALL) -m 444 ici4core3.ici $(ICILIBDIR)
	@echo '=========================================='
	@echo 'Headers'
	@echo '=========================================='
	$(INSTALL) -m 444 $(ICIHDRS) $(INCDIR)
	@echo '=========================================='
	@echo 'Documentation'
	@echo '=========================================='
	$(INSTALL) -m 444 $(DOCS) $(DOCDIR)
	@echo '=========================================='
	@echo 'Install done'
	@echo '=========================================='

clean:
	rm -f $(PROG) $(LIB) main.o $(ALL_OBJS) ici.h

clobber: clean
	rm -f .depend $(GCH)

depend:
	mkdep $(CFLAGS) $(OBJS:.o=.c) main.c

-include .depend
