This file documents a list of things that ICI needs. If you feel like
doing one of them then by all means do so and if you are public minded 
donate your changes.

General

	Remove reliance on C's string functions and sprintf() so
	strings with NULs can be handled properly. This is a general
	problem in many places in the interpreter. There are places
	where ICI's strings are passed directly to C functions which
	can result in incorrect behaviour if those strings contain
	NULs. For true reliabilty ICI should check for such situations
	and raise errors when the C function could perform incorrectly.
	Other sections of the interpreter should be fixed to avoid
	using C-isms where they are not appropriate to ICI.

	A load of example programs are required as is a general
	tutorial document. This is probably one of the biggest
	things that stops ICI being more popular (and the fact
	previous versions couldn't do GUI style things).

	Investigate use of automake/autoconf for configuring,
	building, etc... This might mean a few changes to the
	way headers etc... are included and how code is conditionally
	compiled. I don't know if it's the easist way to go. The
	system specific files aren't too bad. If needed a simple
	configure script could be written to grab the system's
	Makefile, replace some variables and write out a Makefile
	and conf.h file.

	Some one needs to write a more comprehensive test suite.

Modules

	Native code modules need to be collectable. When a GC occurs
	unused modules should be unloaded (and unmapped from the
	address space). This requires that cfuncs and mem objects
	that point to the dynamically loaded module have references
	to a ``module'' object so it can remain mapped while it is
	still referenced.

	It would be nice if there were some method to define a module
	hierarchy directly in ICI rather than via the ICIPATH environment
	variable.

Future Changes

	The sockets functions and the system calls are to be removed
	from ICI proper and turned into autoloading modules. This
	should in the next major version (2.2), whenever that occurs.
	The sockets functions will become the ``net'' module and the
	system calls form the basis of the ``sys'' module. In general
	new functionality will be introduced using modules. The core
	language will remain small.

Trivial fixes

	Add esc() function.
	
	Add iota() & rho() equivalents.
	
	str = string(mem) ? Does that work?
	
	How about ''...'' for strings without \'s?

---

Fix it so reading from currentfile keeps track of line numbers
in sync with the parse structure.

---

Make waitfor be able to wait on a set.

---

Make sure static strings don't get registered with the gc, but do
get their leafz set (to 1?)

---

Update all the extension modules to ici4

---

Tests required: build, smash

---

Update dependencies under Windows.

---

Mention the old form of smash in the documentation.

---

Remove sockets from core and rely on net module.

---

Update and check ici_uninit().

---

Document wrap.

---

Document things defined in icicore.ici

---

Resurrect win stuff as an extension module and document.

---

Verify the Makefile.maint is up-to-date and working.
